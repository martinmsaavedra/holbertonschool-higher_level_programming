The ``100-matrix_multiplication`` module
========================================
Using ``matrix_multiplication``
-------------------------------

Importing the function from the module:
>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[1, 2], [3, 4]]

>>> matrix_mul(m_a, m_b)
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1]], [[1]])
[[1]]


Check: module docstring:
>>> a = __import__("100-matrix_mul").__doc__
>>> len(a) > 1
True

Check: function docstring:
>>> b = __import__("100-matrix_mul").matrix_mul.__doc__
>>> len(b) > 1
True

Check: matrix of string:
>>> matrix_mul([[1, 2], [3, 4]], [["hello", "k", 0]])
Traceback (most recent call last):
...
ValueError: m_b should contain only integers or floats

Check: empty matrix:
>>> matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

Check: no args:
>>> matrix_mul()
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Check: too many args:
>>> matrix_mul([[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Check: function normal:
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]
