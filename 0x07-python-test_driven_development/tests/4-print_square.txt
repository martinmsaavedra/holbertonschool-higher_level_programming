The ``4-print_square`` module
============================
Using ``print_square``
--------------------

Importing the function from the module:
>>> print_square = __import__("4-print_square").print_square

Checking for module docstring:
>>> m = __import__("4-print_square").__doc__
>>> len(m) > 1
True
    
Checking for function docstring:
>>> f = __import__("4-print_square").print_square.__doc__
>>> len(f) > 1
True

>>> print_square(5)
#####
#####
#####
#####
#####

>>> print_square(None)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square()
Traceback (most recent call last):
    ...
TypeError: print_square() missing 1 required positional argument: 'size'

>>> print_square(-83)
Traceback (most recent call last):
    ...
ValueError: size must be >= 0

>>> print_square(3.5)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(float('inf'))
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(float('NaN'))
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(True)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square([2])
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square("")
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square("hello")
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(0)