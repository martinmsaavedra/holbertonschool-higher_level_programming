The ``0-add_integer`` module
======================
Using ``add_integer``
-------------------

Importing the function from the module:
    >>> add_integer = __import__("0-add_integer").add_integer
    
    Checking for module docstring:
    >>> m = __import__("0-add_integer").__doc__
    >>> len(m) > 1
    True
    
    Checking for function docstring:
    >>> f = __import__("0-add_integer").add_integer.__doc__
    >>> len(f) > 1
    True
    
    Basic calculations:
    >>> add_integer(2, 5)
    7
    >>> add_integer(80, 2)
    82
    
    
    >>> add_integer(300)
    398
    
    Exponential integers:
    >>> add_integer(1e7, 5)
    10000005
    
    Basic calculations with negative numbers:    
    >>> add_integer(-1, 2)
    1
    
    >>> add_integer(-3, -6)
    -9
    
    >>> add_integer(3, -2)
    1
    
    >>> add_integer(-1)
    97
    
    Integers and chars combined:    
    
    >>> add_integer(8j, 2)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    >>> add_integer(8, 561j)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    
    >>> add_integer(3j)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    Float test:    
    >>> add_integer(25.3)
    123

    >>> add_integer(10, 22.2)
    32

    >>> add_integer(-10, 22.2)
    12

    >>> add_integer(-10.5)
    87
    
    Infinity as float:    
    >>> add_integer(float('inf'), 3)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
   
    NaN as float:    
    >>> add_integer(float('NaN'), 3)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
    
    String as an only argument (a):    
    
    >>> add_integer("Hello")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    String/integer:    
    >>> add_integer("Hello", 1)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    >>> add_integer(0, "Hello")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    
    More than two arguments:    
    >>> add_integer(0, 2, 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
    
    No arguments passed:    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
    
    "None" passed as an argument:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    Boolean passed as an argument:
    >>> add_integer(True, 5)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    Boolean passed as an argument:
    >>> add_integer(5, False)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer